"use strict";(self.webpackChunkpersonal_site=self.webpackChunkpersonal_site||[]).push([[9],{3993:function(e,t,n){n.r(t);var a=n(7294),l=n(9),o=n(4080),r=n(4302);t.default=function(){return a.createElement(r.DO,{title:"Building an interactive personal blog with React and Gatsby JS",description:"How to build an interactive personal blog with the React and Gatsby JS frameworks.",lastUpdated:new Date(2021,8,7)},a.createElement("h1",null,"Building an interactive personal blog with React and Gatsby JS"),a.createElement("p",null,"I've always wanted a personal blog. A small piece of the internet that I could call home. I also really wanted a blog that I created from scratch. While I could have very easily turned to tools like Squarespace or Medium, the idea of owning my own website that I built from scratch was something that was very appealing to me. I wanted to learn how to build websites, and the tools needed to build them."),a.createElement("p",null,"Unlike existing blogs, I also wanted to build a blog that could be interactive. I believe that blogs could have an incredible amount of potential as an interactive form of reading. As a simple example, you could press a button in order to change its internal state (something like this button here ",a.createElement(i,null),"). A more complicated example might involve a reader interacting with visualizations, code examples, graphs, or other objects. Many existing blogging tools just didn't have this option (or if they did, I couldn't find it), so I decided to build my own."),a.createElement("p",null,"It seems fitting then that my first blog article should be about its own creation. In this article, I discuss how I built this interactive personal blog using the React and Gatsby JS frameworks. I'll go from the design process, to its implementation, to how I hosted it on GitHub Pages. I've also open sourced this blog under the MIT License, and it is available at"," ",a.createElement(o.A,{href:"https://github.com/jasonrobwebster/jasonrobwebster.github.io"},"GitHub")," ","for anyone to use or learn from."),a.createElement("section",null,a.createElement("h2",null,"Requirements"),a.createElement("p",null,"Off the bat, I knew I wanted two things from my blog."),a.createElement("ol",null,a.createElement("li",null,"The ability to write interactive content. Visualizations, graphs, and custom calculators for example."),a.createElement("li",null,"For people to reach my pages via search engines.")),a.createElement("p",null,"I also wanted to use ",a.createElement(o.A,{href:"https://reactjs.org/"},"React")," for my interactive content."),a.createElement("p",null,a.createElement(o.A,{href:"https://www.gatsbyjs.com/"},"Gatsby"),' helps solve all of the above requirements. It generates static pages that are then "hydrated" with React code on the client side. Having static, pre-rendered pages is important for search engine web-crawlers, since they can\'t normally read the JS code in the otherwise empty single page app that React would generate.'),a.createElement("p",null,"I, ofcourse, did not start with Gatsby. I decided to make my life difficult by thinking I could create my own solution to my problems. I wanted to use my own custom webpack, babel, and react configurations, despite knowing of Gatsby's existence. I struggled with this for weeks before swallowing my pride. Do not be like me. Do not make your life difficult. Just use Gatsby.")),a.createElement("section",null,a.createElement("h2",null,"Design"),a.createElement("p",null,"Design is an incredibly important and often overlooked step of creating a website, particularly for beginner web devs or people (like me) who like coding more than looks. If you are creating a blog from scratch, you need to start with design. I use"," ",a.createElement(o.A,{href:"http://www.figma.com"},"Figma")," to design my websites. It's a fairly ubiquitous industry tool that has the distinct advantage of being free (as compared to something like Adobe XD)."),a.createElement("p",null,"To begin, I collected references of blogs that would appeal to my target audience. Since my target audience would be people like me, I collected references from the blogs I like. Once I had my reference material, I decided what elements I liked and disliked. I would include the elements I like, and cut what I dislike."),a.createElement("p",null,"I used ",a.createElement(o.A,{href:"https://www.redblobgames.com/"},"Red Blob Games")," and"," ",a.createElement(o.A,{href:"https://medium.com/"},"Medium")," as my two main sources of references. The former as an example of a personal blog that I really like (that also had interactive content). The latter I used for something with more broad appeal."),a.createElement("p",null,"My initial design for this blog can be seen"," ",a.createElement(o.A,{href:"/images/blog-design.png"},"here"),". There are a few differences here and there between the initial design and the final product you're now reading. I opted for a smaller footer bar without a nav menu and slightly less width for the page contents, but the overall wireframe remained intact."),a.createElement("p",null,"During this process, I ended up asking myself way more questions about text display than I thought I would initially. What size of text is ideal? How should it reactively scale according to the size of the web browser? What's the ideal number of characters per line (apparently, around"," ",a.createElement(o.A,{href:"https://baymard.com/blog/line-length-readability"},"65 characters"),"). I used my browser's dev tools on my reference blogs in order to help answer these question. I wouldn't have made any progress had I not had those references. Long story short, use references!")),a.createElement("section",null,a.createElement("h2",null,"Implementation"),a.createElement("p",null,"I'll cover the technical implemetation of the blog here. I'll only be covering the \"interactive blog\" bit, and won't be covering like the styling, css, SEO optimization, etc."),a.createElement("p",null,"I didn't start a Gatsby project the"," ",a.createElement(o.A,{href:"https://www.gatsbyjs.com/docs/quick-start/"},"normal way")," ( i.e. using ",a.createElement("code",null,"npm init gatsby"),"). Instead, I started a Gatsby project from scratch, using:"),a.createElement("pre",null,a.createElement("code",{className:"language-shell"},"npm i gatsby react")),a.createElement("p",null,"In order for gatsby to actually build websites from my code, I needed a particular folder structure. I ended up with this:"),a.createElement("pre",null,a.createElement("code",null,d)),a.createElement("p",null,"For those new to Gatsby, the ",a.createElement("code",null,"src/pages/")," directory is most important. React components written there will be automatically compiled into their own html pages that are then hydrated on the client side. In other words, I'd be able to write React code in a file named ",a.createElement("code",null,"src/pages/page-name.jsx")," and have it rendered at the"," ",a.createElement("code",null,"/page-name/")," endpoint."),a.createElement("p",null,"The key idea to create my interactive blog posts was to write blogs in React under the ",a.createElement("code",null,"src/pages/blog/")," directory. I'd then use the ",a.createElement("code",null,"/blog/")," endpoint (generated by the"," ",a.createElement("code",null,"src/pages/blog/index.jsx")," file) to route users to the posts. This isn't the most ideal solution: I'll have to write my blogs in code (instead of something like Markdown or an in browser editor) and will have to push my changes to GitHub everytime I write a new article. But, importantly, the solution works, and you wouldn't be reading this blog without this solution."),a.createElement("p",null,"An example of an interactive blog post would be something that uses React's ",a.createElement("code",null,"useState")," hook:"),a.createElement("pre",null,a.createElement("code",{className:"language-jsx"},u)),a.createElement("p",null,'That\'s it for how I wrote the interactive blog posts. To actually connect the blog posts to my blog root endpoint, I set up a "datastore" to hold the location and metadata for each of my blogs. The ',a.createElement("code",null,"slug")," stored the endpoint, which as discussed above was basically the name of the file that contained my page. I also included a ",a.createElement("code",null,"published"),' tag that would hide it from the root page, in case I ever wanted to do that. The "blog datastore" ended up just being a variable that looked like:'),a.createElement("pre",null,a.createElement("code",{className:"language-javascript"},m)),a.createElement("p",null,"I'd then be able to use this to generate each link to my blog, using a custom built ",a.createElement("code",null,"<BlogCard />")," component (inspired directly by my"," ",a.createElement(o.A,{href:"https://www.redblobgames.com/"},"Red Blob Games")," reference, and my love of cards in general):"),a.createElement("pre",null,a.createElement("code",{className:"language-jsx"},g)),a.createElement("pre",null,a.createElement("code",{className:"language-jsx"},h)),a.createElement("p",null,"When all combined (with a little css styling), I'd have a nice set of cards at the ",a.createElement("code",null,"/blog/")," endpoint, each linking to my published interactive blog posts:"),a.createElement(s,null,a.createElement(r.$h,{key:1,url:"#",title:"Build­ing an in­ter­ac­tive blog with Re­act and Gats­by JS",description:"How I built a personal blog with React and Gatsby JS.",tag:"Tech",imageLink:"/images/blog.png"})),a.createElement("p",null,"And... that's about it for the \"interactive blog\" part of the implementation. The rest of the implementation was basically getting the styles and UI/UX to match my initial design, which I won't cover here.")),a.createElement("section",null,a.createElement("h2",null,"Deploying to GitHub Pages"),a.createElement("p",null,"GitHub pages is a free way to host a personal blog. In order to set this up, you need to have a repo named"," ",a.createElement("code",null,"<username>",".github.io"),". In my case, that's"," ",a.createElement("code",null,"jasonrobwebster.github.io"),". Then, in the repo's Settings > Pages, you need to specify the branch that the your site will be built from. Set it to the ",a.createElement("code",null,"gh-pages")," branch. If you don't have this branch yet, create it."),a.createElement("p",null,"We'll deploy our site using the ",a.createElement("code",null,"gh-pages")," package. This will send a local directory to our repo's ",a.createElement("code",null,"gh-pages")," ","branch. Since we've set up our repo with the ",a.createElement("code",null,"gh-pages")," ","branch, this should work off the bat, but we'll require a small configuration line to make sure we upload the ",a.createElement("code",null,"public/")," ","directory."),a.createElement("p",null,"First, we'll install the ",a.createElement("code",null,"gh-pages")," package"),a.createElement("pre",null,a.createElement("code",{className:"language-shell"},"npm i gh-pages")),a.createElement("p",null,"Before we deploy our blog, we need to build our pages from our source code. In our ",a.createElement("code",null,"package.json"),", set up the following scripts. Note that we are uploading the ",a.createElement("code",null,"public/")," directory to the"," ",a.createElement("code",null,"gh-pages")," branch using the"," ",a.createElement("code",null,"gh-pages -d pub­lic")," script."),a.createElement("pre",null,a.createElement("code",{className:"language-json"},p)),a.createElement("p",null,"Then run"),a.createElement("pre",null,a.createElement("code",{className:"language-shell"},"npm run build")),a.createElement("p",null,"Our blog will be built in the ",a.createElement("code",null,"public/")," directory. To deploy our built website, we run"),a.createElement("pre",null,a.createElement("code",{className:"language-shell"},"npm run deploy")),a.createElement("p",null,"Going to ",a.createElement("code",null,"<username>",".github.io"),", you should see your built website, ready for anyone to use. And because we're using Gatsby, we have prerendered ",a.createElement("code",null,"html")," pages for search engines to crawl (we're still not optimised for SEO though, to do that we can follow"," ",a.createElement(o.A,{href:"https://www.gatsbyjs.com/docs/add-seo-component/"},"this guide"),").")),a.createElement("section",null,a.createElement("h2",null,"Conclusion"),a.createElement("p",null,"We've managed to design, implement, and deploy an interactive personal blog using the React and Gatsby framework. We can use it to write interactive blog posts in React code, and generate an SEO optimized page that we host on GitHub. For any more details, feel free to browse this blog's"," ",a.createElement(o.A,{href:"https://github.com/jasonrobwebster/jasonrobwebster.github.io"},"source code")," ","on GitHub.")))};var i=function(){var e=(0,a.useState)(0),t=e[0],n=e[1];return a.createElement(c,{onClick:function(){n(t+1)}},t)},s=l.ZP.div.withConfig({displayName:"building-an-interactive-personal-blog__CardDisplay",componentId:"sc-3mlxlc-0"})(["display:flex;justify-content:center;padding-bottom:1.5rem;"]),c=l.ZP.button.withConfig({displayName:"building-an-interactive-personal-blog__StyledButton",componentId:"sc-3mlxlc-1"})(["display:inline-block;position:relative;padding:0.1rem 0.5rem 0.2rem;background-color:",";color:",";border:0px solid;border-radius:0.25rem;box-shadow:0px 2px 4px rgba(0,0,0,0.2);&:hover{top:-2px;}&:active{top:0px;}"],(function(e){return e.theme.primary}),(function(e){return e.theme.text.light})),d="jasonrobwebster.github.io/\n  ├── src/\n  |   ├── components/\n  |   ├── pages/\n  |   |   ├── blog/\n  |   |   |   ├── index.jsx\n  |   |   |   ├── blog-article-1.jsx\n  |   |   |   ├── blog-article-2.jsx\n  |   |   |   ├── ...\n  |   |   ├── contact.jsx\n  |   |   ├── index.jsx\n  |   |   ├── tools.jsx\n  |   ├── shared\n  |   |   ├── styles/\n  |   |   ├── devices.js\n  |   |   ├── theme.js\n  ├── .eslintrc\n  ├── .git\n  ├── .gitignore\n  ├── .prettierignore\n  ├── .pretterrc.js\n  ├── gatsby-browser.js\n  ├── gatsby-config.js\n  ├── gatsby-ssr.js\n  ├── LICENSE\n  ├── package-lock.json\n  ├── package.json\n  └── root-wrapper.js\n",u='// src/pages/example-blog.jsx\n\nimport React, { useState } from "react"\n\nimport { ArticleWrapper } from "../../components"\n\nconst exampleBlog = () => {\n  const [value, setValue] = useState(0)\n\n  const increaseValue = () => {\n    setValue(value + 1)\n  }\n\n  return (\n    <ArticleWrapper lastUpdated={new Date(2021, 8, 7)}>\n      <button onClick={increaseValue}>{`Value: ${value}`}</button>\n    </ArticleWrapper>\n  )\n}\n\nexport default exampleBlog\n',m='// src/pages/blog/index.jsx\n\n// blog card datastore\nconst blogs = [\n  {\n    title: "Example blog title",\n    description: "Example blog description",\n    tag: "Tech",\n    slug: "example-blog", // for src/pages/blog/example-blog.jsx\n    image: "images/blog.png",\n    published: false,\n    lastUpdated: new Date(2021, 8, 3),\n  },\n]',g='// src/pages/blog/index.jsx\n\nimport React from "react"\n\nimport fp from "lodash/fp"\n\nimport { BlogCard, PageWrapper } from "../../components"\n\nconst Blog = () => {\n  const publishedBlogs = fp.filter((blog) =>\n    isProduction ? blog.published : true\n  )(blogs)\n  const lastBlog = fp.maxBy((blog) => blog.lastUpdated)(blogs)\n\n  return (\n    <React.Fragment>\n      <PageWrapper lastUpdated={lastBlog.lastUpdated}>\n        <CardContent>\n          {fp.flow(\n            fp.sortBy((blog) => -(blog.lastUpdated || new Date())),\n            fp.map((blog) => (\n              <BlogCard\n                key={blog.slug}\n                url={blog.slug}\n                title={blog.title}\n                imageLink={blog.image}\n                description={blog.description}\n                tag={blog.tag}\n              />\n            ))\n          )(publishedBlogs)}\n        </CardContent>\n      </PageWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default Blog\n',h='// src/components/BlogCard.jsx\n\nimport React from "react"\n\nimport { Link } from "gatsby"\n\nimport { HyphenatedText } from "./text"\n\nconst BlogCard = ({ url, title, imageLink, description, tag }) => {\n  return (\n    <React.Fragment>\n      <Card to={url}>\n        <Card.Content>\n          <Card.Image src={imageLink} />\n          <Card.Text>\n            <Card.Title>\n              <HyphenatedText>{title}</HyphenatedText>\n            </Card.Title>\n            <Card.Description>\n              <HyphenatedText>{description}</HyphenatedText>\n            </Card.Description>\n            <Card.Tag>{tag}</Card.Tag>\n          </Card.Text>\n        </Card.Content>\n      </Card>\n    </React.Fragment>\n  )\n}\n\nexport default BlogCard\n',p='// package.json\n"scripts": {\n  "dev": "gatsby develop",\n  "build": "gatsby build",\n  "predeploy": "npm run build",\n  "deploy": "gh-pages -d public",\n  "serve": "gatsby serve",\n  "clean": "gatsby clean"\n}\n'}}]);
//# sourceMappingURL=component---src-pages-blog-building-an-interactive-personal-blog-jsx-1b5441aa042f3c2ec6f2.js.map